# pisah file
name: CI
on:
  push:
    branches:
      - main # or your main branch
  pull_request:
    branches:
      - main # or your main branch
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22" # Specify your Node.js version
      - name: Install dependencies
        run: npm install
      - name: Run ESLint
        run: npx eslint . --max-warnings=0 # Fail if there are any warnings
  test:
    runs-on: ubuntu-latest
    needs: lint # Ensure linting is done before running tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22" # Specify your Node.js version
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm test # Ensure your test command collects coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info # Path to your coverage file
          token: ${{ secrets.CODECOV_TOKEN }} # Codecov token (should be set in repo secrets)
  build:
    name: ðŸŽ‰ Deploy
    runs-on: ubuntu-latest
    steps:
      - name: ðŸšš Get latest code
        uses: actions/checkout@v2

      - name: Set up SSH for Deployment
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: Create .env file
        run: |
          echo "${{ secrets.ENV_VARIABLE }}" > .env
      
      - name: Copy .env to VPS
        run: |
          scp -o StrictHostKeyChecking=no .env ubuntu@3.25.73.206:~/24001186-km7-asd-basicbankingsystem-ch2/.env

      - name: Deploy to EC2
        run: |
          # Pindah ke directory project
          ssh -o StrictHostKeyChecking=no ubuntu@3.25.73.206 << 'EOF'

          cd ~/24001186-km7-asd-basicbankingsystem-ch2

          # Pull perubahan terbaru dari branch main
          git pull origin main

          # Install dependencies proyek
          npm install

          # Generate Prisma Client
          npx prisma generate

          # Ganti API_BASE_URL di swagger-template.json
          API_BASE_URL="${{ secrets.API_BASE_URL }}"
          sed "s|{{API_BASE_URL}}|$API_BASE_URL|g" ./docs/swagger-api-v1.json

          # Restart App
          pm2 restart "API Binar Academy" || pm2 start npm --name "API Binar Academy" -- start

          EOF