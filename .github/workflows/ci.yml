# pisah file
name: CI
on:
  push:
    branches:
      - main # or your main branch
  pull_request:
    branches:
      - main # or your main branch
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22" # Specify your Node.js version
      - name: Install dependencies
        run: npm install
      - name: Run ESLint
        run: npx eslint . --max-warnings=0 # Fail if there are any warnings
  test:
    runs-on: ubuntu-latest
    needs: lint # Ensure linting is done before running tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22" # Specify your Node.js version
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm test # Ensure your test command collects coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info # Path to your coverage file
          token: ${{ secrets.CODECOV_TOKEN }} # Codecov token (should be set in repo secrets)
  build:
    name: ðŸŽ‰ Deploy
    runs-on: ubuntu-latest
    steps:
      - name: ðŸšš Get latest code
        uses: actions/checkout@v2
      - name: ðŸ›  Install dependencies
        run: npm install
      - name: ðŸ›  Install Vite globally
        run: npm install -g vite
      - name: ðŸ“‚ rsync deployments
        uses: burnett01/rsync-deployments@5.1
        with:
          switches: -avzr --delete
          path: ./*
          remote_path: /var/www/html/24001186-km7-asd-basicbankingsystem-ch2/
          remote_host: 3.107.176.199
          remote_user: ubuntu
          remote_key: "${{ secrets.SSH_PRIVATE_KEY }}"
      - name: ðŸ“‚ Set ownership on remote server
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

          # Create known_hosts file if it doesn't exist
          mkdir -p /home/runner/.ssh
          touch /home/runner/.ssh/known_hosts
          
          # Clear old key from known_hosts
          ssh-keygen -R 3.107.176.199 >> /home/runner/.ssh/known_hosts

          # Run the SSH command
          ssh -i private_key.pem -o StrictHostKeyChecking=no ubuntu@3.107.176.199 \
          "sudo chown -R ubuntu:ubuntu /var/www/html/24001186-km7-asd-basicbankingsystem-ch2/ && chmod 777 -R /var/www/html/24001186-km7-asd-basicbankingsystem-ch2/storage && chmod -R 777 /var/www/html/24001186-km7-asd-basicbankingsystem-ch2/bootstrap/cache/ && cd /var/www/html/24001186-km7-asd-basicbankingsystem-ch2/ && sudo npm install -g vite  && npm install && sudo chown -R ubuntu:apache /var/www/html/24001186-km7-asd-basicbankingsystem-ch2/ && chmod +x /var/www/html/24001186-km7-asd-basicbankingsystem-ch2/dev_run.sh"          
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: ðŸŽ‰ Deploy to Remote Server
        uses: appleboy/ssh-action@master
        with:
          host: 3.107.176.199
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/html/24001186-km7-asd-basicbankingsystem-ch2/
            ./dev_run.sh